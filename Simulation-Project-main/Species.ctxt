#BlueJ class context
comment0.target=Species
comment0.text=\r\n\ A\ class\ representing\ shared\ characteristics\ of\ species\ in\ the\ simulation.\r\n\ Allows\ all\ species\ to\ die,\ mate,\ giveBirth,\ age\ and\ carry\ diseases.\r\n\r\n\ @author\ David\ J.\ Barnes,\ Michael\ K\u00C3\u00B6lling,\r\n\ Areeba\ Safdar(K20045738)\ and\ Sabeeka\ Ahmad(K20012890)\r\n\ @version\ 2016.02.29\ (2)\r\n
comment1.params=randomAge\ field\ location
comment1.target=Species(boolean,\ Field,\ Location)
comment1.text=\r\n\ Create\ a\ new\ species\ at\ location\ in\ field,\ assigns\ a\ random\ age\ and\r\n\ random\ energy\ level\ if\ randomAge\ is\ true.\r\n\ The\ random\ age\ will\ be\ between\ 0\ and\ the\ maximum\ age\ the\ species.\r\n\ The\ random\ energy\ level\ will\ be\ between\ 1\ and\ maximum\ energy\ the\ specie\r\n\ can\ have.\r\n\ If\ randomAge\ is\ false\ the\ age\ is\ set\ to\ 0\ and\ energy\ level\ is\ set\ to\r\n\ a\ newborn's\ energy.\r\n\r\n\ @param\ field\ \ \ \ \ The\ field\ currently\ occupied.\r\n\ @param\ location\ \ The\ location\ within\ the\ field.\r\n\ @param\ randomAge\ Determines\ if\ a\ random\ age\ should\ be\ assigned\r\n
comment10.params=
comment10.target=boolean\ getDoesSleep()
comment10.text=\r\n\ @retrun\ of\ the\ specie\ sleeps\r\n
comment11.params=
comment11.target=int\ getFoodLevel()
comment11.text=\r\n\ @retrun\ of\ the\ food\ level\ of\ the\ specie\r\n
comment12.params=
comment12.target=boolean\ getIsFemale()
comment12.text=\r\n\ @return\ if\ the\ instance\ of\ this\ species\ is\ female\r\n
comment13.params=number
comment13.target=void\ setAge(int)
comment13.text=\r\n\ Sets\ the\ age\ of\ the\ species\ to\ the\ value\ specified\ by\r\n\ the\ parameter\ number.\r\n\r\n\ @param\ number\ the\ new\ age\ of\ tbe\ species\r\n
comment14.params=
comment14.target=boolean\ isAlive()
comment14.text=\r\n\ Check\ whether\ the\ instance\ of\ a\ species\ is\ alive\ or\ not.\r\n\r\n\ @return\ true\ if\ the\ animal\ is\ still\ alive.\r\n
comment15.params=
comment15.target=void\ setDead()
comment15.text=\r\n\ Indicate\ that\ the\ instance\ of\ a\ species\ is\ no\ longer\ alive.\r\n\ It\ is\ removed\ from\ the\ field.\r\n
comment16.params=
comment16.target=Location\ getLocation()
comment16.text=\r\n\ Return\ the\ location\ of\ a\ species.\r\n\r\n\ @return\ The\ species'\ location.\r\n
comment17.params=newLocation
comment17.target=void\ setLocation(Location)
comment17.text=\r\n\ Place\ the\ species\ at\ the\ new\ location\ given.\r\n\r\n\ @param\ newLocation\ The\ species'\ new\ location.\r\n
comment18.params=
comment18.target=Field\ getField()
comment18.text=\r\n\ Return\ the\ field\ of\ a\ species.\r\n\r\n\ @return\ The\ species'\ field.\r\n
comment19.params=disease
comment19.target=void\ addDisease(Disease)
comment19.text=\r\n\ Adds\ a\ disease\ to\ the\ species\r\n\r\n\ @param\ disease\ the\ disease\ it\ will\ now\ carry\r\n
comment2.params=newSpecies\ isDay\ diseaseBeingSpread\ weatherOccurring
comment2.target=void\ act(java.util.List,\ boolean,\ Disease,\ Weather)
comment2.text=\r\n\ An\ abstract\ method\ to\ make\ each\ species\ act\ -\ method\ should\ perform\ all\r\n\ actions\ each\ species\ does\r\n\r\n\ @param\ newSpecies\ \ \ \ \ \ \ \ \ Holds\ all\ new\ species\ being\ born\ from\r\n\ @param\ isDay\ \ \ \ \ \ \ \ \ \ \ \ \ \ determines\ if\ the\ simulation\ is\ in\ daytime\r\n\ @param\ diseaseBeingSpread\ is\ the\ disease\ currently\ being\ spread\ in\ the\ simulation\r\n\ @param\ weatherOccurring\ \ \ The\ weather\ event\ occuring\r\n
comment20.params=disease
comment20.target=void\ removeDisease(Disease)
comment20.text=\r\n\ Removes\ the\ disease\ specified\ -\ the\ specie\ is\ no\ longer\ infected\r\n\r\n\ @param\ disease\ the\ disease\ being\ removed\r\n
comment21.params=disease
comment21.target=boolean\ doesCarryDisease(Disease)
comment21.text=\r\n\ Returns\ if\ a\ specie\ carries\ a\ specific\ disease\r\n\r\n\ @param\ disease\ the\ disease\ being\ checked\r\n
comment22.params=
comment22.target=java.util.List\ getDiseasesCarried()
comment22.text=\r\n\ @return\ the\ list\ of\ diseases\ the\ specie\ carries\r\n
comment23.params=
comment23.target=boolean\ isInfected()
comment23.text=\r\n\ Returns\ if\ a\ specie\ is\ infected.\ If\ the\ lists\ containing\ diseases\ carried\r\n\ is\ empty\ then\ the\ specie\ is\ not\ infected\r\n\r\n\ @return\ true\ if\ it's\ carrying\ at\ least\ one\ disease,\ otherwise\ false\r\n
comment24.params=newEnergy
comment24.target=void\ changeEnergyLevel(int)
comment24.text=\r\n\ Method\ used\ to\ change\ the\ energyLevel\ of\ a\ species.\ If\ the\ new\r\n\ energy\ level\ exceeds\ the\ maximum\ energy\ a\ species\ can\ have,\ then\ the\r\n\ energy\ level\ is\ set\ to\ a\ maximum.\ If\ the\ energy\ level\ drops\ below\ 0\ it\r\n\ is\ killed.\r\n\r\n\ @param\ newEnergy\ the\ value\ the\ energyLevel\ will\ be\ updated\ to\r\n
comment25.params=
comment25.target=boolean\ canBreed()
comment25.text=\r\n\ A\ species\ can\ breed\ if\ it\ has\ reached\ the\ breeding\ age.\r\n\r\n\ @return\ true\ if\ the\ species\ can\ breed,\ false\ otherwise.\r\n
comment26.params=
comment26.target=void\ incrementAge()
comment26.text=\r\n\ Increments\ the\ age\ of\ a\ species.\ The\ instance\ of\ the\ species\r\n\ will\ be\ killed\ if\ it's\ reached\ past\ the\ maximum\ age\r\n
comment27.params=
comment27.target=int\ breed()
comment27.text=\r\n\ Generate\ a\ number\ representing\ the\ number\ of\ births,\r\n\ if\ it\ can\ breed.\r\n\ A\ species\ can\ only\ breed\ if\ it's\ of\ age\ and\ has\ a\ partner\ in\ a\r\n\ neighbouring\ cell\r\n\r\n\ @return\ The\ number\ of\ births\ may\ be\ zero.\r\n
comment28.params=newSpecies
comment28.target=void\ giveBirth(java.util.List)
comment28.text=\r\n\ Used\ to\ create\ new\ instances\ of\ different\ species.\r\n\ Checks\ if\ the\ species\ can\ breed\ (is\ of\ breeding\ age\ and\ has\ mate).\r\n\ New\ births\ will\ be\ made\ into\ free\ adjacent\ locations.\r\n\r\n\ @param\ newSpecies\ list\ holding\ all\ newborns\r\n
comment29.params=
comment29.target=boolean\ hasMate()
comment29.text=\r\n\ Checks\ if\ the\ current\ species\ has\ a\ mate\ in\ a\ neighbouring\ cell.\r\n\ The\ mate\ should\ be\ of\ the\ same\ species,\ opposite\ gender\ and\ in\r\n\ a\ neighbouring\ cell.\r\n\r\n\ @return\ true\ if\ the\ species\ has\ a\ mate,\ false\ otherwise\r\n
comment3.params=newSpecies\ field\ loc
comment3.target=void\ addBaby(java.util.List,\ Field,\ Location)
comment3.text=\r\n\ An\ abstract\ method\ to\ create\ and\ add\ a\ new\ baby\ of\ different\ species\r\n\r\n\ @param\ newSpecies\r\n\ @param\ field\ \ \ \ \ \ The\ grid\ in\ which\ the\ animal\ will\ be\ born\r\n\ @param\ loc\ \ \ \ \ \ \ \ The\ location\ of\ the\ new\ animal's\ birth\r\n
comment4.params=
comment4.target=int\ getBreedingAge()
comment4.text=\r\n\ @return\ the\ age\ at\ which\ the\ specie\ can\ breed\r\n
comment5.params=
comment5.target=int\ getMaxAge()
comment5.text=\r\n\ @return\ the\ maximum\ age\ at\ of\ the\ specie\r\n
comment6.params=
comment6.target=double\ getBreedingProbability()
comment6.text=\r\n\ @return\ the\ probability\ of\ the\ specie\ breeding\r\n
comment7.params=
comment7.target=int\ getBirthLimit()
comment7.text=\r\n\ @return\ the\ maximum\ births\ a\ specie\ can\ give\ at\ a\ time\r\n
comment8.params=
comment8.target=int\ getMaxEnergyLevel()
comment8.text=\r\n\ @retrun\ the\ energy\ level\ of\ a\ specific\ predator\r\n
comment9.params=
comment9.target=int\ getNewBornEnergyLevel()
comment9.text=\r\n\ @retrun\ the\ energy\ level\ of\ a\ newborn\ specie\r\n
numComments=30
